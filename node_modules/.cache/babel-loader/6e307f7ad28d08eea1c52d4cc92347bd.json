{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport DeroBridgeApi from './api.js';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport to from 'await-to-js';\nimport { addMember } from './actions';\n\nconst App = () => {\n  _s();\n\n  const member = useSelector(state => state.member);\n  const dispatch = useDispatch();\n  /*   const [firstMember, setFirstMember] = React.useState(null);\n    const [secondMember, setSecondMember] = React.useState(null);\n    const [thirdMember, setThirdMember] = React.useState(null);\n    const [fourthMember, setFourthMember] = React.useState(null);\n    const [fifthMember, setFifthMember] = React.useState(null);\n    const [contract, setContract] = React.useState(null);\n     */\n\n  const deroBridgeApiRef = React.useRef();\n  const [bridgeInitText, setBridgeInitText] = React.useState('');\n  React.useEffect(() => {\n    const load = async () => {\n      deroBridgeApiRef.current = new DeroBridgeApi();\n      const deroBridgeApi = deroBridgeApiRef.current;\n      const [err] = await to(deroBridgeApi.init());\n\n      if (err) {\n        setBridgeInitText('failed to connect to extension');\n      } else {\n        setBridgeInitText('connected to extension');\n      }\n    };\n\n    window.addEventListener('load', load);\n    return () => window.removeEventListener('load', load);\n  }, []);\n  /*   const appoint = React.useCallback(async () => {\n      const deroBridgeApi = deroBridgeApiRef.current\n      const [err, res] = await to(deroBridgeApi.wallet('start-transfer', {\n      \t\"scid\": contract,\n      \t\"ringsize\": 2,\n      \t\"sc_rpc\": [{\n      \t\t\"name\": \"entrypoint\",\n      \t\t\"datatype\": \"S\",\n      \t\t\"value\": \"AppointFiveMembers\"\n      \t},\n          {\n              \"name\": \"address0\",\n              \"datatype\": \"S\",\n              \"value\": firstMember\n          },\n          {\n              \"name\": \"address1\",\n              \"datatype\": \"S\",\n              \"value\": secondMember\n          },\n          {\n              \"name\": \"address2\",\n              \"datatype\": \"S\",\n              \"value\": thirdMember\n          },\n          {\n              \"name\": \"address3\",\n              \"datatype\": \"S\",\n              \"value\": fourthMember\n          },\n          {\n              \"name\": \"address4\",\n              \"datatype\": \"S\",\n              \"value\": fifthMember\n          }]\n      }))\n  \n      console.log(err)\n      console.log(res)\n    }, [])\n    \n      const openVote = React.useCallback(async () => {\n      const deroBridgeApi = deroBridgeApiRef.current\n      const [err, res] = await to(deroBridgeApi.wallet('start-transfer', {\n      \t\"scid\": contract,\n      \t\"ringsize\": 2,\n      \t\"sc_rpc\": [{\n      \t\t\"name\": \"entrypoint\",\n      \t\t\"datatype\": \"S\",\n      \t\t\"value\": \"OpenVote\"\n      \t},\n          {\n      \t\t\"name\": \"motion\",\n      \t\t\"datatype\": \"U\",\n      \t\t\"value\": 4\n      \t},\n          {\n      \t\t\"name\": \"address\",\n      \t\t\"datatype\": \"S\",\n      \t\t\"value\": \"DERO\"\n      \t},\n          {\n      \t\t\"name\": \"amountOrSeat\",\n      \t\t\"datatype\": \"U\",\n      \t\t\"value\": 100000\n      \t}]\n      }))\n  \n      console.log(err)\n      console.log(res)\n    }, [])\n    \n    const setFiveMembers = (event) => {\n    \tevent.preventDefault();\n    \tsetFirstMember(event.target.m1.value);\n    \tconsole.log(firstMember);\n    \tsetSecondMember(event.target.m2.value);\n    \tconsole.log(secondMember);\n    \tsetThirdMember(event.target.m3.value);\n    \tconsole.log(thirdMember);\n    \tsetFourthMember(event.target.m4.value);\n    \tconsole.log(fourthMember);\n    \tsetFifthMember(event.target.m5.value);\n    \tconsole.log(fifthMember);\n    \tappoint();\n    }\n    \n    const setSCID = (event) => {\n    \tevent.preventDefault();\n    \tsetContract(event.target.scid.value);\n    \tconsole.log(contract);\n    }\n  \n    const getBalance = React.useCallback(async () => {\n      const deroBridgeApi = deroBridgeApiRef.current\n      const [err, res] = await to(deroBridgeApi.wallet('get-balance'))\n      if (err) alert(err.message)\n      else alert(JSON.stringify(res))\n    }) */\n\n  return {\n    bridgeInitText\n  };\n  /* <h3> Set Contract SCID </h3>\n  <form onSubmit={setSCID}>\n  \t<p>SCID:</p>\n  \t<input id=\"scid\" type=\"text\" />\n  \t<button type={\"submit\"}> Set </button>\n  </form>\n  <h3> Appoint Five Board Members </h3>\n  <form onSubmit={setFiveMembers}>\n  \t<p>Member 1 </p>\n  \t<input id=\"m1\" type=\"text\" />\n  \t<p>Member 2 </p>\n  \t<input id=\"m2\" type=\"text\" />\n  \t<p>Member 3 </p>\n  \t<input id=\"m3\" type=\"text\" />\n  \t<p>Member 4 </p>\n  \t<input id=\"m4\" type=\"text\" />\n  \t<p>Member 5 </p>\n  \t<input id=\"m5\" type=\"text\" />\n  \t<button type={\"submit\"}>Appoint</button>\n  </form>\n  <button onClick={getBalance}>Get balance</button>\n   <button onClick = {() => dispatch(addMember(0,\"hello\"))}> add member</button> */\n};\n\n_s(App, \"/ZK1/B+fZAS3A6rO4nU6SzgbOHA=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["DeroBridgeApi","React","ReactDOM","useSelector","useDispatch","to","addMember","App","member","state","dispatch","deroBridgeApiRef","useRef","bridgeInitText","setBridgeInitText","useState","useEffect","load","current","deroBridgeApi","err","init","window","addEventListener","removeEventListener"],"sources":["/home/josho/Dero/DERO_OAO/src/App.js"],"sourcesContent":["import DeroBridgeApi from './api.js';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {useSelector, useDispatch} from 'react-redux';\nimport to from 'await-to-js';\nimport {addMember} from './actions';\n\nconst App = () => {\n\n  const member = useSelector(state => state.member);\n  const dispatch = useDispatch();\n\n /*   const [firstMember, setFirstMember] = React.useState(null);\n   const [secondMember, setSecondMember] = React.useState(null);\n   const [thirdMember, setThirdMember] = React.useState(null);\n   const [fourthMember, setFourthMember] = React.useState(null);\n   const [fifthMember, setFifthMember] = React.useState(null);\n   const [contract, setContract] = React.useState(null);\n    */\n  const deroBridgeApiRef = React.useRef();\n  const [bridgeInitText, setBridgeInitText] = React.useState('');\n\n  React.useEffect(() => {\n    const load = async () => {\n      deroBridgeApiRef.current = new DeroBridgeApi()\n      const deroBridgeApi = deroBridgeApiRef.current\n      const [err] = await to(deroBridgeApi.init())\n      if (err) {\n        setBridgeInitText('failed to connect to extension')\n      } else {\n        setBridgeInitText('connected to extension')\n      }\n    }\n\n    window.addEventListener('load', load)\n    return () => window.removeEventListener('load', load)\n  }, [])\n\n \n \n/*   const appoint = React.useCallback(async () => {\n    const deroBridgeApi = deroBridgeApiRef.current\n    const [err, res] = await to(deroBridgeApi.wallet('start-transfer', {\n    \t\"scid\": contract,\n    \t\"ringsize\": 2,\n    \t\"sc_rpc\": [{\n    \t\t\"name\": \"entrypoint\",\n    \t\t\"datatype\": \"S\",\n    \t\t\"value\": \"AppointFiveMembers\"\n    \t},\n        {\n            \"name\": \"address0\",\n            \"datatype\": \"S\",\n            \"value\": firstMember\n        },\n        {\n            \"name\": \"address1\",\n            \"datatype\": \"S\",\n            \"value\": secondMember\n        },\n        {\n            \"name\": \"address2\",\n            \"datatype\": \"S\",\n            \"value\": thirdMember\n        },\n        {\n            \"name\": \"address3\",\n            \"datatype\": \"S\",\n            \"value\": fourthMember\n        },\n        {\n            \"name\": \"address4\",\n            \"datatype\": \"S\",\n            \"value\": fifthMember\n        }]\n    }))\n\n    console.log(err)\n    console.log(res)\n  }, [])\n  \n    const openVote = React.useCallback(async () => {\n    const deroBridgeApi = deroBridgeApiRef.current\n    const [err, res] = await to(deroBridgeApi.wallet('start-transfer', {\n    \t\"scid\": contract,\n    \t\"ringsize\": 2,\n    \t\"sc_rpc\": [{\n    \t\t\"name\": \"entrypoint\",\n    \t\t\"datatype\": \"S\",\n    \t\t\"value\": \"OpenVote\"\n    \t},\n        {\n    \t\t\"name\": \"motion\",\n    \t\t\"datatype\": \"U\",\n    \t\t\"value\": 4\n    \t},\n        {\n    \t\t\"name\": \"address\",\n    \t\t\"datatype\": \"S\",\n    \t\t\"value\": \"DERO\"\n    \t},\n        {\n    \t\t\"name\": \"amountOrSeat\",\n    \t\t\"datatype\": \"U\",\n    \t\t\"value\": 100000\n    \t}]\n    }))\n\n    console.log(err)\n    console.log(res)\n  }, [])\n  \n  const setFiveMembers = (event) => {\n  \tevent.preventDefault();\n  \tsetFirstMember(event.target.m1.value);\n  \tconsole.log(firstMember);\n  \tsetSecondMember(event.target.m2.value);\n  \tconsole.log(secondMember);\n  \tsetThirdMember(event.target.m3.value);\n  \tconsole.log(thirdMember);\n  \tsetFourthMember(event.target.m4.value);\n  \tconsole.log(fourthMember);\n  \tsetFifthMember(event.target.m5.value);\n  \tconsole.log(fifthMember);\n  \tappoint();\n  }\n  \n  const setSCID = (event) => {\n  \tevent.preventDefault();\n  \tsetContract(event.target.scid.value);\n  \tconsole.log(contract);\n  }\n\n  const getBalance = React.useCallback(async () => {\n    const deroBridgeApi = deroBridgeApiRef.current\n    const [err, res] = await to(deroBridgeApi.wallet('get-balance'))\n    if (err) alert(err.message)\n    else alert(JSON.stringify(res))\n  }) */\n\n  return {\n    bridgeInitText}\n    /* <h3> Set Contract SCID </h3>\n    <form onSubmit={setSCID}>\n    \t<p>SCID:</p>\n    \t<input id=\"scid\" type=\"text\" />\n    \t<button type={\"submit\"}> Set </button>\n    </form>\n    <h3> Appoint Five Board Members </h3>\n    <form onSubmit={setFiveMembers}>\n    \t<p>Member 1 </p>\n    \t<input id=\"m1\" type=\"text\" />\n    \t<p>Member 2 </p>\n    \t<input id=\"m2\" type=\"text\" />\n    \t<p>Member 3 </p>\n    \t<input id=\"m3\" type=\"text\" />\n    \t<p>Member 4 </p>\n    \t<input id=\"m4\" type=\"text\" />\n    \t<p>Member 5 </p>\n    \t<input id=\"m5\" type=\"text\" />\n    \t<button type={\"submit\"}>Appoint</button>\n    </form>\n    <button onClick={getBalance}>Get balance</button>\n\n    <button onClick = {() => dispatch(addMember(0,\"hello\"))}> add member</button> */\n  \n}\n\n\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,aAAP,MAA0B,UAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,OAAOC,EAAP,MAAe,aAAf;AACA,SAAQC,SAAR,QAAwB,WAAxB;;AAEA,MAAMC,GAAG,GAAG,MAAM;EAAA;;EAEhB,MAAMC,MAAM,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACD,MAAhB,CAA1B;EACA,MAAME,QAAQ,GAAGN,WAAW,EAA5B;EAED;AACD;AACA;AACA;AACA;AACA;AACA;;EACE,MAAMO,gBAAgB,GAAGV,KAAK,CAACW,MAAN,EAAzB;EACA,MAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCb,KAAK,CAACc,QAAN,CAAe,EAAf,CAA5C;EAEAd,KAAK,CAACe,SAAN,CAAgB,MAAM;IACpB,MAAMC,IAAI,GAAG,YAAY;MACvBN,gBAAgB,CAACO,OAAjB,GAA2B,IAAIlB,aAAJ,EAA3B;MACA,MAAMmB,aAAa,GAAGR,gBAAgB,CAACO,OAAvC;MACA,MAAM,CAACE,GAAD,IAAQ,MAAMf,EAAE,CAACc,aAAa,CAACE,IAAd,EAAD,CAAtB;;MACA,IAAID,GAAJ,EAAS;QACPN,iBAAiB,CAAC,gCAAD,CAAjB;MACD,CAFD,MAEO;QACLA,iBAAiB,CAAC,wBAAD,CAAjB;MACD;IACF,CATD;;IAWAQ,MAAM,CAACC,gBAAP,CAAwB,MAAxB,EAAgCN,IAAhC;IACA,OAAO,MAAMK,MAAM,CAACE,mBAAP,CAA2B,MAA3B,EAAmCP,IAAnC,CAAb;EACD,CAdD,EAcG,EAdH;EAkbG,G;AAmKN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}